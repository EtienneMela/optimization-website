jQuery((function($){var Formoid=(API_URL=("https:"==location.protocol?"https:":"http:")+"//formoid.net/api/push",$ajax=8==(ie=(/MSIE (\d+)\./.exec(navigator.userAgent)||[0,0])[1])||9==ie&&"file:"!=location.protocol?function(url,settings){var xdr=new XDomainRequest,defer=$.Deferred();return xdr.open(settings.type,url),xdr.onload=function(){defer.resolve(this.responseText)},xdr.onerror=function(){defer.reject()},xdr.send(settings.data),defer}:($.support.cors=!0,$.ajax),prop=function(name,args){return name="__"+name+"__",args.length?(this[name]=args[0],this):this[name]},attachMethods=function(obj,context,methods){return $.each(methods,(function(i,method){obj[method]=function(){return context[method].apply(context,arguments)}})),obj},(Form=function(settings){settings=settings||{},this.__email__=settings.email||"",this.__title__=settings.title||"",this.__data__=settings.data||[],this.__recaptcha__=settings.recaptcha||""}).prototype.email=function(value){return prop.call(this,"email",arguments)},Form.prototype.title=function(value){return prop.call(this,"title",arguments)},Form.prototype.recaptcha_token=function(value){return prop.call(this,"recaptcha_token",arguments)},Form.prototype.data=function(value){return prop.call(this,"data",arguments)},Form.prototype.getCaptchaToken=function(){var recaptcha=this.__recaptcha__,def=$.Deferred();return recaptcha?grecaptcha.ready((function(){try{grecaptcha.execute(recaptcha,{action:"homepage"}).then((function(token){def.resolve(token)}))}catch(error){console.error(error),def.resolve(null)}})):def.resolve(null),def.promise()},Form.prototype.send=function(data,beforeStart){var _this=this,defer=attachMethods($.Deferred(),this,["email","title","data","send"]),recaptchaToken=this.__recaptcha__?this.getCaptchaToken():$.when();return beforeStart&&(beforeStart.call(this,defer),"pending"!=defer.state())?defer:(recaptchaToken.then((function(token){token&&(_this.__rcph_token__=token)})).always((function(){var objData={email:_this.__email__,form:{title:_this.__title__,data:arguments.length?data:_this.__data__}};_this.__rcph_token__&&(objData.recaptcha_token=_this.__rcph_token__),$ajax(API_URL,{type:"POST",data:JSON.stringify(objData)}).done((function(responseText){try{var data=JSON.parse(responseText);data.error?defer.reject(data.error):defer.resolve(data.response)}catch(e){defer.reject("Incorrect server response.")}})).fail((function(){var error="Failed to query the server. ";"onLine"in navigator&&!navigator.onLine?error+="No connection to the Internet.":error+="Check the connection and try again.",defer.reject(error)}))})),defer)},{Form:function(settings){return new Form(settings)}}),API_URL,$ajax,ie,prop,attachMethods,Form,isValidEmail=function(input){var isValid=!0,value=$(input).val();return value&&(isValid=/^([^@]+?)@(([a-z0-9]-*)*[a-z0-9]+\.)+([a-z0-9]+)$/i.test(value)),isValid};$('[data-form-type="formoid"]').each((function(){var form,$this=$(this),$form=$this.is("form")?$this:$this.find("form"),action=$form.attr("action"),$alert=$this.find("[data-form-alert]"),$title=$this.is("[data-form-title]")?$this:$this.find("[data-form-title]"),$submit=$this.find('[type="submit"]'),$inputArr=$form.find("[data-form-field]"),alertSuccess=$form.find("[data-form-alert]").length?$alert.html():$alert.find("[data-form-alert-success]").html(),$captcha=$this.find("[data-form-captcha]");$form.change((function(event){"file"===event.target.type&&event.target.files[0].size>1e6&&($alert.removeAttr("hidden"),$alert.removeClass("alert-success").addClass("alert-danger"),$alert.html("File size must be less than 1mb"),$submit.addClass("btn-loading").prop("disabled",!0))})),$inputArr.each((function(index,elem){$(elem).on("focus",(function(){$alert.attr("hidden","hidden"),$alert.addClass("alert-success").removeClass("alert-danger"),$alert.html(""),$submit.removeClass("btn-loading").prop("disabled",!1)}))})),$form.submit((function(event){if(event.preventDefault(),!$submit.hasClass("btn-loading")){var data=[],inputs=$inputArr;$form.addClass("form-active"),$submit.addClass("btn-loading").prop("disabled",!0),$alert.html(""),form=form||Formoid.Form({email:$this.find("[data-form-email]").val(),title:$title.attr("data-form-title")||$title.text(),recaptcha:$this.find("[data-form-captcha]").val()||!1}),parseInputs(inputs).then((function(arrDef){$.when.apply(this,arrDef).then((function(){form.send(data).always((function(){$submit.removeClass("btn-loading").prop("disabled",!1),$alert.removeAttr("hidden")})).then((function(message){$form[0].reset(),$form.removeClass("form-active"),$alert.text(alertSuccess||message),$alert.removeClass("alert-danger").addClass("alert-success")})).fail((function(error){$alert.text(error),$alert.removeClass("alert-success").addClass("alert-danger")}))}),(function(err){$alert.html(err.message),$alert.removeClass("alert-success").addClass("alert-danger"),$alert.removeAttr("hidden")}))}))}function parseInputs(inputs){var def=$.Deferred(),arrDeferred=[];return inputs.each((function(index,input){var $input=$(input),typeInput=$input.attr("type"),objDeferred=$.Deferred();if(arrDeferred.push(objDeferred),"email"===$input.attr("name")&&!isValidEmail(input))return $submit.removeClass("btn-loading").prop("disabled",!0),def.reject(new Error("Form is not valid")),!1;switch(typeInput){case"file":var reader=new FileReader,name=$input.attr("data-form-field")||$input.attr("name"),files=$input[0].files[0];reader.onloadend=function(){data.push([name,reader.result]),objDeferred.resolve()},reader.onerror=function(){$alert.html(reader.error),def.reject(reader.error)},files&&reader.readAsDataURL(files);break;case"checkbox":data.push([$input.attr("data-form-field")||$input.attr("name"),$input.prop("checked")?$input.val():"No"]),objDeferred.resolve();break;case"radio":$input.prop("checked")&&data.push([$input.attr("data-form-field")||$input.attr("name"),$input.val()]),objDeferred.resolve();break;default:data.push([$input.attr("data-form-field")||$input.attr("name"),$input.val()]),objDeferred.resolve()}})),def.resolve(arrDeferred)}}))}))}));